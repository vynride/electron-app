name: Build/Release Electron App

on:
  push:
    tags:
      - 'v*.*.*'
    branches:
      - main
      - master

permissions:
  contents: write

jobs:
  # --- 1. BUILD JOB ---
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # Re-add ubuntu-latest if you need Linux builds
        os: [windows-latest]

    steps:
      - name: Check out Git repository
        uses: actions/checkout@v4

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: Install Dependencies
        run: npm install

      # - name: Build Linux
      #   if: matrix.os == 'ubuntu-latest'
      #   run: npm run build:linux

      - name: Build Windows
        if: matrix.os == 'windows-latest'
        run: npm run build:win

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.os }}
          path: |
            dist/*.exe
            dist/*.zip
            # dist/*.AppImage
            # dist/*.deb
            dist/*.yml
            dist/*.blockmap
          if-no-files-found: warn

  # --- 2. RELEASE JOB ---
  release:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist
          merge-multiple: true
      #
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:          
          # 1. For a tag push (e.g., v1.0.0), use the tag name: "v1.0.0"
          # 2. For a branch push, use the branch name + short SHA: "Draft: main (abc1234)"
          name: >-
            ${{ startsWith(github.ref, 'refs/tags/')
                ? github.ref_name
                : format('Draft: {0} ({1})', github.ref_name, github.sha) }}
          
          # 1. For a tag push, use the tag name: "v1.0.0"
          # 2. For a branch push, create a unique tag: "draft-main-abc1234..."
          #    (This prefix avoids the 40-hex-char error)
          tag_name: >-
            ${{ startsWith(github.ref, 'refs/tags/')
                ? github.ref_name
                : format('draft-{0}-{1}', github.ref_name, github.sha) }}
                    
          # Always create a draft as you wanted
          draft: true
          
          # Mark branch pushes (non-tags) as a pre-release
          prerelease: ${{ !startsWith(github.ref, 'refs/tags/') }}
          
          files: dist/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

